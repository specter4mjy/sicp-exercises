;; (define (multiply a b)
;;   (define (even? n)
;;     (= (remainder n 2) 0))
;;   (define (halve m)
;;     (/ m 2))
;;   (define (double k)
;;     (* k 2))
;;   (define (iter a b s)
;;     (cond ((= b 0) s)
;;           ((even? b) (iter a (- b 1) (+ s a)))
;;           (else (iter (double a) (- (halve (+ b 1)) 1) (+ s a)))))
;;   (iter a b 0))

;; (multiply 12 10)

(define (multiply a b)
  (define (even? n)
    (= (remainder n 2) 0))
  (define (halve m)
    (/ m 2))
  (define (double k)
    (* k 2))
  (define (iter a b s)
    (cond ((= b 0) s)
          ((even? b) (iter (double a) (halve b) s))
          (else (iter a (- b 1) (+ s a)))))
  (iter a b 0))

(multiply 7 5)
